// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebVue.DAL;

namespace WebVue.Migrations
{
    [DbContext(typeof(BigBagDbContext))]
    [Migration("20230908221705_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebVue.Models.ProgramVyroby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cislo")
                        .HasColumnType("int");

                    b.Property<string>("Nazov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZariadenieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZariadenieId");

                    b.ToTable("Programy");
                });

            modelBuilder.Entity("WebVue.Models.Uzivatel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cislo")
                        .HasColumnType("int");

                    b.Property<string>("Nazov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZariadenieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZariadenieId");

                    b.ToTable("Uzivatelia");
                });

            modelBuilder.Entity("WebVue.Models.Zariadenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cislo")
                        .HasColumnType("int");

                    b.Property<string>("Nazov")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zariadenia");
                });

            modelBuilder.Entity("WebVue.Models.Zaznam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CasVazenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CasVycitania")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Den")
                        .HasColumnType("int");

                    b.Property<int?>("Hodiny")
                        .HasColumnType("int");

                    b.Property<int?>("Mesiac")
                        .HasColumnType("int");

                    b.Property<int?>("Minuty")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramCislo")
                        .HasColumnType("int");

                    b.Property<string>("ProgramNazov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rok")
                        .HasColumnType("int");

                    b.Property<int?>("UzivatelCislo")
                        .HasColumnType("int");

                    b.Property<string>("UzivatelNazov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Vaha")
                        .HasColumnType("float");

                    b.Property<int?>("ZariadenieCislo")
                        .HasColumnType("int");

                    b.Property<int?>("ZariadenieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZariadenieId");

                    b.ToTable("Zaznamy");
                });

            modelBuilder.Entity("WebVue.Models.ProgramVyroby", b =>
                {
                    b.HasOne("WebVue.Models.Zariadenie", "Zariadenie")
                        .WithMany("Programy")
                        .HasForeignKey("ZariadenieId");

                    b.Navigation("Zariadenie");
                });

            modelBuilder.Entity("WebVue.Models.Uzivatel", b =>
                {
                    b.HasOne("WebVue.Models.Zariadenie", "Zariadenie")
                        .WithMany("Uzivatelia")
                        .HasForeignKey("ZariadenieId");

                    b.Navigation("Zariadenie");
                });

            modelBuilder.Entity("WebVue.Models.Zaznam", b =>
                {
                    b.HasOne("WebVue.Models.Zariadenie", "Zariadenie")
                        .WithMany("Zaznamy")
                        .HasForeignKey("ZariadenieId");

                    b.Navigation("Zariadenie");
                });

            modelBuilder.Entity("WebVue.Models.Zariadenie", b =>
                {
                    b.Navigation("Programy");

                    b.Navigation("Uzivatelia");

                    b.Navigation("Zaznamy");
                });
#pragma warning restore 612, 618
        }
    }
}
